#!/usr/bin/env zsh

{{ if eq .chezmoi.os "linux" }}

  {{ if eq .chezmoi.osRelease.id "ubuntu" }}

    ######################################
    # install essential packages via apt #
    ######################################

    echo "Updating apt and installing base packages..."

    sudo apt update
    sudo apt install -y \
      git \
      vim \
      curl \
      zsh \
      openssh-server \
      gnome-tweaks \
      tmux \
      acpi \
      jq \
      ripgrep


    ############################################################
    # install the latest peco from the official GitHub release #
    ############################################################

    echo "Installing peco..."

    TMP_DIR=$(mktemp -d)
    cd "$TMP_DIR"
    LATEST_VERSION=$(curl -s https://api.github.com/repos/peco/peco/releases/latest | jq -r '.tag_name')
    curl -LO "https://github.com/peco/peco/releases/download/${LATEST_VERSION}/peco_linux_amd64.tar.gz"
    tar -xzf peco_linux_amd64.tar.gz
    sudo mv peco_linux_amd64/peco /usr/local/bin/
    cd -
    rm -rf "$TMP_DIR"
    echo "‚úÖ peco installed"


    ##############################################################
    # install the latest Neovim from the official GitHub release #
    ##############################################################

    echo "Installing Neovim AppImage..."

    TMP_DIR=$(mktemp -d)
    cd "$TMP_DIR"
    curl -LO "https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.appimage"
    chmod u+x nvim-linux-x86_64.appimage
    ./nvim-linux-x86_64.appimage --appimage-extract

    sudo mkdir -p /opt/nvim
    sudo mv nvim-linux-x86_64.appimage /opt/nvim/nvim
    cd -
    rm -rf "$TMP_DIR"
    echo "‚úÖ Neovim Installed"


    #########################################################
    # verify installed packages and display their versions  #
    #########################################################

    echo
    echo "--------------------------------------------"
    echo "üß© Installed Packages Summary"
    echo "--------------------------------------------"

    declare -A PACKAGES=(
      [git]="git --version"
      [vim]="vim --version | head -n 1"
      [curl]="curl --version | head -n 1"
      [zsh]="zsh --version"
      [tmux]="tmux -V"
      [jq]="jq --version"
      [acpi]="acpi -version | head -n 1"
      [peco]="peco --version"
      [nvim]="nvim --version | head -n 1"
    )

    for pkg in ${(k)PACKAGES}; do
      if command -v $pkg >/dev/null 2>&1; then
        version=$(eval ${PACKAGES[$pkg]} 2>/dev/null)
        echo "‚úÖ $pkg: $version"
      else
        echo "‚ùå $pkg: Not installed"
      fi
    done

    echo "--------------------------------------------"
    echo "üß© Installation check complete"
    echo "--------------------------------------------"


  {{ end }}

{{ end }}
